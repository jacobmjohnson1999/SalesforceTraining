public class AggregateExample {
    
    //an aggregate function performs a calculation on a set of values and returns a single value unless used with group by
    //We have 6:
    //1. COUNT: it returns the count of the the number of records returned from a query
    //2. COUNT_DISTNICT: this returns the number of unique records returned from a query
    //3. MIN: returns the minimum value for a set of records returned from a query, it must be used on a number or date or datetime field
    //4. MAX: returns the maximum value for a set of records returned from a query, it must be used on a number or date or datetime field
    //5. SUM: returns the sum of all the values in a field for a set of records returned from a query, it must be used on a number or date or datetime field
    //6. AVG: returns the average of a field value for a set of records returned from a query, it must be used on a number or date or datetime field
    //
    public static void agg(){
        List<AggregateResult> numAccounts = [SELECT COUNT(ID) FROM Account WHERE RATING ='Hot'];
        system.debug(numAccounts);
        
       List<AggregateResult> numeAccounts = [SELECT COUNT(ID), Rating FROM Account GROUP BY Rating];
       system.debug(numeAccounts); 
        system.debug(numeAccounts[0].get('expr0'));
        String name ='Hello%';
       Account a = [SELECT Name FROM Account Where Name LIKE: name  LIMIT 1];
        system.debug(a);
        
        //I want to get the average of the amount of revenue generated by oppurtunities by account
        List<AggregateResult> avgAmount = [SELECT AVG(Amount), Account.Name FROM Opportunity GROUP BY Account.Name];
        system.debug(avgAmount);
    }

}